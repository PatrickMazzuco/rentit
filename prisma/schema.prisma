// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  cars Car[]
  @@map("categories")
}

model Specification {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  cars Car[]

  @@map("specifications")
}

model User {
  id             String  @id @default(uuid())
  name           String
  username       String  @unique
  password       String
  email          String  @unique
  driversLicense String  @map("drivers_license")
  isAdmin        Boolean @default(false) @map("is_admin")
  avatar         String

  rentals Rental[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model CarImage {
  id          String   @id @default(uuid())
  description String
  image       String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  car   Car    @relation(fields: [carId], references: [id])
  carId String

  @@map("car_images")
}

model Car {
  id           String  @id @default(uuid())
  name         String
  description  String
  licensePlate String  @unique @map("license_plate")
  brand        String
  dailyRate    Float   @map("daily_rate")
  fineAmount   Float   @map("fine_amount")
  available    Boolean @default(true)

  categoryId String?   @map("category_id")
  category   Category? @relation(fields: [categoryId], references: [id])

  specifications Specification[]
  images         CarImage[]
  rentals        Rental[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")


  @@map("cars")
}

model Rental {
  id                 String    @id @default(uuid())
  startDate          DateTime  @map("start_date")
  endDate            DateTime? @map("end_date")
  expectedReturnDate DateTime  @map("expected_return_date")
  total              Float?    @map("total")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  carId String @map("car_id")
  car   Car    @relation(fields: [carId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("rentals")
}
